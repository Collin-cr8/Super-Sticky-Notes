{"ast":null,"code":"import _toConsumableArray from \"/Users/C-Money/coding/React/react-stickynotes/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/C-Money/coding/React/react-stickynotes/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/C-Money/coding/React/react-stickynotes/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/C-Money/coding/React/react-stickynotes/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/C-Money/coding/React/react-stickynotes/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/C-Money/coding/React/react-stickynotes/src/App.js\";\nimport React, { Component } from \"react\";\nimport SiteHeader from \"./Header.js\";\nimport NotesList from \"./NotesList.js\";\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n  var _super = _createSuper(App);\n  function App() {\n    var _this;\n    _classCallCheck(this, App);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      notes: [{\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      }],\n      searchText: \"\"\n    };\n    _this.addNote = function () {\n      //create new note\n      var newNote = {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      };\n      //add new note to existing notes array in state\n      //const newNotes = [newNote, ...this.state.notes]\n      //this.setState({ notes: newNotes})\n      //OR =>\n      _this.setState({\n        notes: [newNote].concat(_toConsumableArray(_this.state.notes))\n      });\n    };\n    //needs to update state and return notes exactly the same except for note being changed\n    _this.onType = function (editMeId, updatedKey, updatedValue) {\n      //editMeId = id of the note that is edited\n      //updatedKey= title or description field\n      //updatedValue = value of title or description\n      //ORDER MATTERS\n      var updatedNotes = _this.state.notes.map(function (note) {\n        if (note.id !== editMeId) {\n          return note;\n        } else {\n          if (updatedKey === \"title\") {\n            note.title = updatedValue;\n            return note;\n          } else {\n            note.description = updatedValue;\n            return note;\n          }\n        }\n      });\n      _this.setState({\n        notes: updatedNotes\n      });\n    };\n    _this.onSearch = function (text) {\n      var newSearchText = text.toLowerCase();\n      var updatedNotes = _this.state.notes.map(function (note) {\n        if (!newSearchText) {\n          note.doesMatchSearch = true;\n          return note;\n        } else {\n          var title = note.title.toLowerCase();\n          var description = note.description.toLowerCase();\n          var titleMatch = title.includes(newSearchText);\n          var descriptionMatch = description.includes(newSearchText);\n          //   ||=\"or\"\n          var hasMatch = titleMatch || descriptionMatch;\n          note.doesMatchSearch = hasMatch;\n          return note;\n        }\n      });\n      _this.setState({\n        notes: updatedNotes,\n        searchText: newSearchText\n      });\n    };\n    _this.removeNote = function (noteId) {\n      var updatedNotes = _this.state.notes.filter(function (note) {\n        return note.id !== noteId;\n      });\n      _this.setState({\n        notes: updatedNotes\n      });\n    };\n    return _this;\n  }\n  _createClass(App, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var stringifiedNotes = JSON.stringify(this.state.notes);\n      localStorage.setItem(\"savedNotes\", stringifiedNotes);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var stringifiedNotes = localStorage.getItem(\"savedNotes\");\n      if (stringifiedNotes) {\n        var savedNotes = JSON.parse(stringifiedNotes);\n        this.setState({\n          notes: savedNotes\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SiteHeader, {\n        onSearch: this.onSearch,\n        addNote: this.addNote,\n        searchText: this.state.searchText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(NotesList, {\n        removeNote: this.removeNote,\n        onType: this.onType,\n        notes: this.state.notes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"names":["React","Component","SiteHeader","NotesList","App","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","notes","id","Date","now","title","description","doesMatchSearch","searchText","addNote","newNote","setState","_toConsumableArray","onType","editMeId","updatedKey","updatedValue","updatedNotes","map","note","onSearch","text","newSearchText","toLowerCase","titleMatch","includes","descriptionMatch","hasMatch","removeNote","noteId","filter","_createClass","key","value","componentDidUpdate","stringifiedNotes","JSON","stringify","localStorage","setItem","componentDidMount","getItem","savedNotes","parse","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/C-Money/coding/React/react-stickynotes/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport SiteHeader from \"./Header.js\";\nimport NotesList from \"./NotesList.js\";\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      }\n    ],\n    searchText: \"\"\n  };\n\n  addNote = () => {\n    //create new note\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    //add new note to existing notes array in state\n    //const newNotes = [newNote, ...this.state.notes]\n    //this.setState({ notes: newNotes})\n    //OR =>\n    this.setState({ notes: [newNote, ...this.state.notes] });\n  };\n\n  //needs to update state and return notes exactly the same except for note being changed\n  onType = (editMeId, updatedKey, updatedValue) => {\n    //editMeId = id of the note that is edited\n    //updatedKey= title or description field\n    //updatedValue = value of title or description\n    //ORDER MATTERS\n    const updatedNotes = this.state.notes.map((note) => {\n      if (note.id !== editMeId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n    this.setState({ notes: updatedNotes });\n  };\n\n  onSearch = (text) => {\n    const newSearchText = text.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n      if (!newSearchText) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n        const titleMatch = title.includes(newSearchText);\n        const descriptionMatch = description.includes(newSearchText);\n        //   ||=\"or\"\n        const hasMatch = titleMatch || descriptionMatch;\n        note.doesMatchSearch = hasMatch;\n        return note;\n      }\n    });\n    this.setState({\n      notes: updatedNotes,\n      searchText: newSearchText\n    });\n  };\n\n  removeNote = (noteId) => {\n    const updatedNotes = this.state.notes.filter((note) => note.id !== noteId);\n    this.setState({ notes: updatedNotes });\n  };\n\n  componentDidUpdate() {\n    const stringifiedNotes = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", stringifiedNotes);\n  }\n\n  componentDidMount() {\n    const stringifiedNotes = localStorage.getItem(\"savedNotes\");\n    if (stringifiedNotes) {\n      const savedNotes = JSON.parse(stringifiedNotes);\n      this.setState({ notes: savedNotes });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <SiteHeader\n          onSearch={this.onSearch}\n          addNote={this.addNote}\n          searchText={this.state.searchText}\n        />\n        <NotesList\n          removeNote={this.removeNote}\n          onType={this.onType}\n          notes={this.state.notes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}